plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.19.0",
    slf4jVersion = "1.7.32"

allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:6.13.0",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:0.12",
            "org.junit.jupiter:junit-jupiter:5.9.1",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:1.0.12",

            "org.seleniumhq.selenium:selenium-java:3.141.59",
            "io.github.bonigarcia:webdrivermanager:5.2.1",

            "org.assertj:assertj-core:3.23.1"
    )
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.1")
}



tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    //-PbaseUrl=https://github.com -Pbrowser=FIREFOX
    systemProperties(System.getProperties())
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()
}